# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'DisplayUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_UE_Surveillance(object):
    def setupUi(self, UE_Surveillance):
        UE_Surveillance.setObjectName("UE_Surveillance")
        UE_Surveillance.resize(800, 428)
        self.centralwidget = QtWidgets.QWidget(UE_Surveillance)
        self.centralwidget.setObjectName("centralwidget")
        self.Start = QtWidgets.QPushButton(self.centralwidget)
        self.Start.setGeometry(QtCore.QRect(410, 280, 141, 31))
        self.Start.setObjectName("Start")
        self.Stop = QtWidgets.QPushButton(self.centralwidget)
        self.Stop.setGeometry(QtCore.QRect(410, 340, 141, 31))
        self.Stop.setObjectName("Stop")
        self.VideoDisplay = QtWidgets.QLabel(self.centralwidget)
        self.VideoDisplay.setGeometry(QtCore.QRect(40, 40, 320, 180))
        self.VideoDisplay.setObjectName("VideoDisplay")
        self.groupBox_type = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_type.setGeometry(QtCore.QRect(380, 40, 201, 91))
        self.groupBox_type.setObjectName("groupBox_type")
        self.real_time = QtWidgets.QRadioButton(self.groupBox_type)
        self.real_time.setGeometry(QtCore.QRect(20, 20, 181, 21))
        self.real_time.setObjectName("real_time")
        self.local_file = QtWidgets.QRadioButton(self.groupBox_type)
        self.local_file.setGeometry(QtCore.QRect(20, 50, 161, 21))
        self.local_file.setObjectName("local_file")
        self.load_model = QtWidgets.QPushButton(self.centralwidget)
        self.load_model.setGeometry(QtCore.QRect(410, 160, 141, 31))
        self.load_model.setObjectName("load_model")
        self.load_file = QtWidgets.QPushButton(self.centralwidget)
        self.load_file.setGeometry(QtCore.QRect(410, 220, 141, 31))
        self.load_file.setObjectName("load_file")
        self.result = QtWidgets.QLabel(self.centralwidget)
        self.result.setGeometry(QtCore.QRect(40, 340, 101, 31))
        self.result.setObjectName("result")
        self.groupBox_classification = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_classification.setGeometry(QtCore.QRect(590, 40, 191, 111))
        self.groupBox_classification.setObjectName("groupBox_classification")
        self.two_class = QtWidgets.QRadioButton(self.groupBox_classification)
        self.two_class.setGeometry(QtCore.QRect(20, 20, 151, 21))
        self.two_class.setObjectName("two_class")
        self.three_class = QtWidgets.QRadioButton(self.groupBox_classification)
        self.three_class.setGeometry(QtCore.QRect(20, 50, 151, 16))
        self.three_class.setObjectName("three_class")
        self.four_class = QtWidgets.QRadioButton(self.groupBox_classification)
        self.four_class.setGeometry(QtCore.QRect(20, 80, 171, 16))
        self.four_class.setObjectName("four_class")
        self.model = QtWidgets.QLabel(self.centralwidget)
        self.model.setGeometry(QtCore.QRect(40, 290, 411, 31))
        self.model.setObjectName("model")
        self.device = QtWidgets.QLabel(self.centralwidget)
        self.device.setGeometry(QtCore.QRect(40, 240, 411, 31))
        self.device.setObjectName("device")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(580, 170, 201, 201))
        self.textBrowser.setObjectName("textBrowser")
        self.led = QtWidgets.QLabel(self.centralwidget)
        self.led.setGeometry(QtCore.QRect(160, 350, 20, 20))
        self.led.setObjectName("led")
        UE_Surveillance.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(UE_Surveillance)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 23))
        self.menubar.setObjectName("menubar")
        UE_Surveillance.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(UE_Surveillance)
        self.statusbar.setObjectName("statusbar")
        UE_Surveillance.setStatusBar(self.statusbar)

        self.retranslateUi(UE_Surveillance)
        QtCore.QMetaObject.connectSlotsByName(UE_Surveillance)

    def retranslateUi(self, UE_Surveillance):
        _translate = QtCore.QCoreApplication.translate
        UE_Surveillance.setWindowTitle(_translate("UE_Surveillance", "UE监控预警"))
        self.Start.setText(_translate("UE_Surveillance", "开始监测"))
        self.Stop.setText(_translate("UE_Surveillance", "停止监测"))
        self.VideoDisplay.setText(_translate("UE_Surveillance", "VideoDisplay"))
        self.groupBox_type.setTitle(_translate("UE_Surveillance", "监控模式"))
        self.real_time.setText(_translate("UE_Surveillance", "实时监控模式"))
        self.local_file.setText(_translate("UE_Surveillance", "本地文件模式"))
        self.load_model.setText(_translate("UE_Surveillance", "加载模型"))
        self.load_file.setText(_translate("UE_Surveillance", "本地文件"))
        self.result.setText(_translate("UE_Surveillance", "实时预测结果"))
        self.groupBox_classification.setTitle(_translate("UE_Surveillance", "分类方式"))
        self.two_class.setText(_translate("UE_Surveillance", "二分类"))
        self.three_class.setText(_translate("UE_Surveillance", "三分类"))
        self.four_class.setText(_translate("UE_Surveillance", "四分类"))
        self.model.setText(_translate("UE_Surveillance", "网络模型"))
        self.device.setText(_translate("UE_Surveillance", "设备情况"))
        self.textBrowser.setHtml(_translate("UE_Surveillance", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">使用说明：</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">1.选择监控方式：实时监控方式为在线实时监控，本地文件方式为选择本地视频文件进行测试。</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">2.选择分类方式：分类方式越多，动作分类越详细。</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">3.加载模型：加载STFormer网络权重文件。</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">4.本地文件：当监控模式选择本地文件模式时，通过该选项选择本地录像文件；</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">5.开始监测：启动UEX监控预警测试。</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">6.停止监测：停止UEX监控预警测试。</p></body></html>"))
        self.led.setText(_translate("UE_Surveillance", "led"))
